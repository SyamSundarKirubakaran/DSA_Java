{
  "success": true,
  "lectures": [
    {
      "id": "3578",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Structure of a node in binary tree",
      "duration_hm": "1:44",
      "num_of_question": "0"
    },
    {
      "id": "3139",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Linear search",
      "duration_hm": "11:4",
      "num_of_question": "0"
    },
    {
      "id": "3452",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a maximum element in a min Heap",
      "duration_hm": "3:14",
      "num_of_question": "0"
    },
    {
      "id": "3879",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find if there is a path between two vertices vi and vj in a directed graph",
      "duration_hm": "1:54",
      "num_of_question": "0"
    },
    {
      "id": "3904",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given number is prime or not",
      "duration_hm": "3:10",
      "num_of_question": "0"
    },
    {
      "id": "3854",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to backtracking",
      "duration_hm": "5:43",
      "num_of_question": "0"
    },
    {
      "id": "3450",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the circular tour that visits all petrol pumps Approach-1",
      "duration_hm": "8:3",
      "num_of_question": "0"
    },
    {
      "id": "3769",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a maximum occurring character in a given string (Approach - 1)",
      "duration_hm": "7:14",
      "num_of_question": "0"
    },
    {
      "id": "3622",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Design LRU cache replacement algorithm (Approach - 1)",
      "duration_hm": "9:16",
      "num_of_question": "0"
    },
    {
      "id": "3890",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to bit wise programming",
      "duration_hm": "5:16",
      "num_of_question": "0"
    },
    {
      "id": "3866",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a text and a pattern, Find all occurrences of pattern in a given text (Naive Approach)",
      "duration_hm": "5:58",
      "num_of_question": "0"
    },
    {
      "id": "3339",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Notations that we will be using in our code",
      "duration_hm": "5:56",
      "num_of_question": "0"
    },
    {
      "id": "3428",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implement a stack using queues",
      "duration_hm": "7:7",
      "num_of_question": "0"
    },
    {
      "id": "3848",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Connecting n ropes with minimum cost",
      "duration_hm": "4:56",
      "num_of_question": "0"
    },
    {
      "id": "3406",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given array contains duplicates in k-distance or not approach-1",
      "duration_hm": "2:42",
      "num_of_question": "0"
    },
    {
      "id": "3460",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the maximum sum sub array (Approach - 1)",
      "duration_hm": "3:28",
      "num_of_question": "0"
    },
    {
      "id": "3728",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Finding a majority element using Linear search",
      "duration_hm": "6:31",
      "num_of_question": "0"
    },
    {
      "id": "3868",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of given text and a pattern ,find all occurrences of pattern in a given text (Naive Approach)",
      "duration_hm": "2:17",
      "num_of_question": "0"
    },
    {
      "id": "3340",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of reverse a linked list",
      "duration_hm": "12:50",
      "num_of_question": "0"
    },
    {
      "id": "3429",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Design a stack such that get minimum () should be 0(1)",
      "duration_hm": "7:29",
      "num_of_question": "0"
    },
    {
      "id": "3849",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of connecting n ropes with minimum cost",
      "duration_hm": "3:5",
      "num_of_question": "0"
    },
    {
      "id": "3732",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Finding a majority element using Binary search",
      "duration_hm": "12:14",
      "num_of_question": "0"
    },
    {
      "id": "3407",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given array contains duplicates in k-distance or not approach-2",
      "duration_hm": "2:24",
      "num_of_question": "0"
    },
    {
      "id": "3583",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find size of the binary tree",
      "duration_hm": "3:43",
      "num_of_question": "0"
    },
    {
      "id": "3461",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the maximum sum sub array (Approach - 2)",
      "duration_hm": "8:48",
      "num_of_question": "0"
    },
    {
      "id": "3141",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Binary search",
      "duration_hm": "8:43",
      "num_of_question": "0"
    },
    {
      "id": "3453",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find a maximum element in a min heap",
      "duration_hm": "1:51",
      "num_of_question": "0"
    },
    {
      "id": "3880",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an undirected graph G(V,E), find whether G has cycle or not",
      "duration_hm": "1:42",
      "num_of_question": "0"
    },
    {
      "id": "3905",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of check whether given number is prime or not",
      "duration_hm": "1:28",
      "num_of_question": "0"
    },
    {
      "id": "3855",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all permutations of given string",
      "duration_hm": "4:39",
      "num_of_question": "0"
    },
    {
      "id": "3451",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the circular tour that visits all petrol pumps Approach-2",
      "duration_hm": "7:16",
      "num_of_question": "0"
    },
    {
      "id": "3770",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a maximum occurring character in a given string (Approach -2)",
      "duration_hm": "3:51",
      "num_of_question": "0"
    },
    {
      "id": "3623",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Design LRU cache replacement algorithm (Approach - 2)",
      "duration_hm": "7:30",
      "num_of_question": "0"
    },
    {
      "id": "3891",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether kth bit set (or) not",
      "duration_hm": "5:17",
      "num_of_question": "0"
    },
    {
      "id": "3771",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a maximum occurring character in a given string (Approach - 3)",
      "duration_hm": "3:30",
      "num_of_question": "0"
    },
    {
      "id": "3624",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Design LRU cache replacement algorithm (Approach - 3)",
      "duration_hm": "5:19",
      "num_of_question": "0"
    },
    {
      "id": "5008",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given text and pattern, Find all occurrences of pattern in a given text (Naive Approach)",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3588",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find size of the binary tree (Implementation - C)",
      "duration_hm": "1:28",
      "num_of_question": "0"
    },
    {
      "id": "3735",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of Majority element check",
      "duration_hm": "6:49",
      "num_of_question": "0"
    },
    {
      "id": "5046",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether given number is prime or not File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3341",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Finding a middle node in list",
      "duration_hm": "7:6",
      "num_of_question": "0"
    },
    {
      "id": "3430",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Design a stack such that get minimum() should be constant time and space",
      "duration_hm": "12:24",
      "num_of_question": "0"
    },
    {
      "id": "3850",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Interval scheduling",
      "duration_hm": "9:32",
      "num_of_question": "0"
    },
    {
      "id": "4921",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find maximum element in min-heap File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3462",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of max sum sub array",
      "duration_hm": "4:6",
      "num_of_question": "0"
    },
    {
      "id": "4909",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether given array contains duplicates in k",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "5037",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether kth bit set or not File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3143",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a pair in an array whose sum is equal to given number",
      "duration_hm": "2:13",
      "num_of_question": "0"
    },
    {
      "id": "3881",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Example of an undirected graph G(V,E), find whether G has cycle or not",
      "duration_hm": "5:0",
      "num_of_question": "0"
    },
    {
      "id": "3856",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of print all permutations of given string",
      "duration_hm": "2:55",
      "num_of_question": "0"
    },
    {
      "id": "3590",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for finding the size of given binary tree",
      "duration_hm": "10:43",
      "num_of_question": "0"
    },
    {
      "id": "4975",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether given integer x is a majority element or not in a sorted array",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4985",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Print all permutations of given string File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3892",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Set kth bit of a number",
      "duration_hm": "3:19",
      "num_of_question": "0"
    },
    {
      "id": "5393",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the maximum sum sub array file",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3144",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a pair in an array whose sum is equal to given number (Hash Approach)",
      "duration_hm": "4:27",
      "num_of_question": "0"
    },
    {
      "id": "3882",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an undirected graph G(V,E), find whether G has cycle or not using union-find",
      "duration_hm": "4:1",
      "num_of_question": "0"
    },
    {
      "id": "3869",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a text and a pattern, Find all occurrences of pattern in a given text (Finite Automata)",
      "duration_hm": "4:31",
      "num_of_question": "0"
    },
    {
      "id": "4983",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Interval Scheduling File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3772",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a maximum occurring character in a given string (Approach - 4)",
      "duration_hm": "4:42",
      "num_of_question": "0"
    },
    {
      "id": "3625",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to AVL trees and balancing",
      "duration_hm": "18:18",
      "num_of_question": "0"
    },
    {
      "id": "3408",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two sets are disjoint or not approach-1",
      "duration_hm": "1:14",
      "num_of_question": "0"
    },
    {
      "id": "3454",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deleting an arbitary element from a min-heap",
      "duration_hm": "3:1",
      "num_of_question": "0"
    },
    {
      "id": "3342",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for find a middle node in a linked list",
      "duration_hm": "3:31",
      "num_of_question": "0"
    },
    {
      "id": "3431",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Reversal of a stack",
      "duration_hm": "7:31",
      "num_of_question": "0"
    },
    {
      "id": "3906",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all prime numbers up to n approach-1",
      "duration_hm": "1:43",
      "num_of_question": "0"
    },
    {
      "id": "3409",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two sets are disjoint or not approach-2",
      "duration_hm": "1:7",
      "num_of_question": "0"
    },
    {
      "id": "5038",
      "cl_lecture_type": "2",
      "cl_lecture_name": "set Kth bit of a number File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3871",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a text and a pattern, Find all occurrences of pattern in a given text (Finite Automata - Construction)",
      "duration_hm": "10:19",
      "num_of_question": "0"
    },
    {
      "id": "3737",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Nuts and bolts problem",
      "duration_hm": "6:5",
      "num_of_question": "0"
    },
    {
      "id": "3455",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation to delete arbitrary element from min heap",
      "duration_hm": "4:36",
      "num_of_question": "0"
    },
    {
      "id": "4004",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find middle node in linked list (using single pointer ) File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3432",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the closest greater element which is present on the right side of the element",
      "duration_hm": "5:38",
      "num_of_question": "0"
    },
    {
      "id": "3907",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all prime numbers up to n approach-2",
      "duration_hm": "2:25",
      "num_of_question": "0"
    },
    {
      "id": "3858",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all the strings of n-bits",
      "duration_hm": "13:8",
      "num_of_question": "0"
    },
    {
      "id": "3464",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Maximum sum increasing subsequence",
      "duration_hm": "6:5",
      "num_of_question": "0"
    },
    {
      "id": "3145",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation to print all pairs in an array whose sum is X",
      "duration_hm": "9:30",
      "num_of_question": "0"
    },
    {
      "id": "3883",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given graph is biparite or not",
      "duration_hm": "3:28",
      "num_of_question": "0"
    },
    {
      "id": "3773",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation to find a character which appears maximum number of times on string",
      "duration_hm": "4:36",
      "num_of_question": "0"
    },
    {
      "id": "4935",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Size_of_binary Tree",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3626",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Constructing AVL trees and time complexity analysis",
      "duration_hm": "16:51",
      "num_of_question": "0"
    },
    {
      "id": "3851",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Number of railway platforms",
      "duration_hm": "4:12",
      "num_of_question": "0"
    },
    {
      "id": "3884",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given graph is biparite or not",
      "duration_hm": "3:28",
      "num_of_question": "0"
    },
    {
      "id": "4922",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Deleting an arbitary element from a min-heap File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3739",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Nuts and Blots problem",
      "duration_hm": "4:13",
      "num_of_question": "0"
    },
    {
      "id": "4963",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find a maximum occurring character in a given string File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3852",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Minimum number of platforms",
      "duration_hm": "8:38",
      "num_of_question": "0"
    },
    {
      "id": "3466",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of maximum sum increasing subsequence",
      "duration_hm": "3:19",
      "num_of_question": "0"
    },
    {
      "id": "3627",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Construction of AVL tree",
      "duration_hm": "22:33",
      "num_of_question": "0"
    },
    {
      "id": "3410",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two sets are disjoint or not approach-3",
      "duration_hm": "1:50",
      "num_of_question": "0"
    },
    {
      "id": "3978",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find a pair whose sum is X (Hash approach)File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3872",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a text and a pattern, find all occurrences of pattern in a given text using Knuth Morris Pratt (KMP) algorithm - 1",
      "duration_hm": "11:48",
      "num_of_question": "0"
    },
    {
      "id": "3893",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Clear kth bit of number",
      "duration_hm": "2:28",
      "num_of_question": "0"
    },
    {
      "id": "4005",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find middle node in linked list (using fast pointer and slow pointer ) File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3433",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the closest greater element which is present on the right side of the element (Approach - 2)",
      "duration_hm": "10:13",
      "num_of_question": "0"
    },
    {
      "id": "3594",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check wheather given two trees are identical or not",
      "duration_hm": "4:17",
      "num_of_question": "0"
    },
    {
      "id": "3908",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given number is lucky (or) not",
      "duration_hm": "5:54",
      "num_of_question": "0"
    },
    {
      "id": "3859",
      "cl_lecture_type": "1",
      "cl_lecture_name": "N-Queens problem (Approach -1)",
      "duration_hm": "9:10",
      "num_of_question": "0"
    },
    {
      "id": "3873",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a text and a pattern, find all occurrences of pattern in a given text using Knuth Morris Pratt (KMP) algorithm - 2",
      "duration_hm": "7:14",
      "num_of_question": "0"
    },
    {
      "id": "3434",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of next greater element",
      "duration_hm": "4:2",
      "num_of_question": "0"
    },
    {
      "id": "3595",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check wheather given two trees are identical or not (Implementation - C)",
      "duration_hm": "1:48",
      "num_of_question": "0"
    },
    {
      "id": "3909",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of whether number is lucky or not",
      "duration_hm": "3:1",
      "num_of_question": "0"
    },
    {
      "id": "3860",
      "cl_lecture_type": "1",
      "cl_lecture_name": "N-Queens problem (Approach -2)",
      "duration_hm": "10:27",
      "num_of_question": "0"
    },
    {
      "id": "3343",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find Kth node from the end of linked list",
      "duration_hm": "7:9",
      "num_of_question": "0"
    },
    {
      "id": "3885",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Detect a cycle in a directed graph",
      "duration_hm": "1:45",
      "num_of_question": "0"
    },
    {
      "id": "4976",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Nuts and Bolts problem File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "5039",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Clear Kth bit of a number File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3775",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Remove duplicates from a given string (Approach-1)",
      "duration_hm": "4:50",
      "num_of_question": "0"
    },
    {
      "id": "3456",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array (Approach-1)",
      "duration_hm": "3:4",
      "num_of_question": "0"
    },
    {
      "id": "3853",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rearrange the string such that same characters are 'd' distance away",
      "duration_hm": "7:25",
      "num_of_question": "0"
    },
    {
      "id": "3628",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Minimum and maximum nodes in an AVL tree of height h",
      "duration_hm": "14:10",
      "num_of_question": "0"
    },
    {
      "id": "4989",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Maximum sum increasing sub sequence File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3411",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two sets are disjoint or not approach-4",
      "duration_hm": "1:22",
      "num_of_question": "0"
    },
    {
      "id": "3979",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find a pair whose sum is x File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3894",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Toggle kth bit of number",
      "duration_hm": "2:11",
      "num_of_question": "0"
    },
    {
      "id": "3776",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Remove duplicates from a given string (Approach - 2)",
      "duration_hm": "3:2",
      "num_of_question": "0"
    },
    {
      "id": "3146",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Finding majority element approach-1 using linear search",
      "duration_hm": "6:31",
      "num_of_question": "0"
    },
    {
      "id": "3457",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array (Approach -2)",
      "duration_hm": "1:32",
      "num_of_question": "0"
    },
    {
      "id": "3629",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Red Black Trees",
      "duration_hm": "7:2",
      "num_of_question": "0"
    },
    {
      "id": "3412",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two sets are disjoint or not approach-5",
      "duration_hm": "1:48",
      "num_of_question": "0"
    },
    {
      "id": "3596",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for checking whether the given two trees are identical or not",
      "duration_hm": "8:2",
      "num_of_question": "0"
    },
    {
      "id": "5009",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given a text and pattern, Find all occurrence of pattern in a given text using Knuth Morris Pratt (KMP)",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4916",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Next closest greater element File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4986",
      "cl_lecture_type": "2",
      "cl_lecture_name": "N-Queens problem File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3344",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find Kth node from the end of linked list (Implementation in C)",
      "duration_hm": "8:12",
      "num_of_question": "0"
    },
    {
      "id": "3886",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all jumping numbers smaller than (or) equal to given value",
      "duration_hm": "6:56",
      "num_of_question": "0"
    },
    {
      "id": "4984",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Rearrange the string such that same characters are 'd' distance away",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3741",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Write a custom c-function to implement pow() function",
      "duration_hm": "3:22",
      "num_of_question": "0"
    },
    {
      "id": "5047",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether number is lucky or not File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3465",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the longest subsequence in an array, such that elements in subsequence are consecutive (Approach - 1)",
      "duration_hm": "2:49",
      "num_of_question": "0"
    },
    {
      "id": "5040",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Toggle Kth bit of number File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3345",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find Kth node from the end of linked list (Implementation in C)",
      "duration_hm": "8:12",
      "num_of_question": "0"
    },
    {
      "id": "4910",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether given two sets are disjoint or not",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3887",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Shortest path in a directed acyclic graph",
      "duration_hm": "11:54",
      "num_of_question": "0"
    },
    {
      "id": "3742",
      "cl_lecture_type": "1",
      "cl_lecture_name": "calculating power function",
      "duration_hm": "7:1",
      "num_of_question": "0"
    },
    {
      "id": "4936",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check_identical_trees",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3875",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Boyer-Moore string matching Algorithm",
      "duration_hm": "16:26",
      "num_of_question": "0"
    },
    {
      "id": "3147",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Moore voting algorithm",
      "duration_hm": "14:12",
      "num_of_question": "0"
    },
    {
      "id": "3459",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array max heap (Approach-3)",
      "duration_hm": "7:0",
      "num_of_question": "0"
    },
    {
      "id": "3435",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implement stack with push ,pop, find middle element, delete middle element in 0(1)",
      "duration_hm": "11:43",
      "num_of_question": "0"
    },
    {
      "id": "3467",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the longest subsequence in an array, such that elements in subsequence are consecutive (Approach - 2)",
      "duration_hm": "6:53",
      "num_of_question": "0"
    },
    {
      "id": "3870",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rat in a Maze (Approach - 1)",
      "duration_hm": "7:11",
      "num_of_question": "0"
    },
    {
      "id": "3778",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Remove duplicates from a given string (Approach - 3)",
      "duration_hm": "6:41",
      "num_of_question": "0"
    },
    {
      "id": "3631",
      "cl_lecture_type": "1",
      "cl_lecture_name": "search,findmax,findmin in Red Black trees",
      "duration_hm": "1:38",
      "num_of_question": "0"
    },
    {
      "id": "3463",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array max heap (Approach-4 )",
      "duration_hm": "7:38",
      "num_of_question": "0"
    },
    {
      "id": "3468",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a Binary matrix, find the largest square sub matrix with all 1's (Approach - 1)",
      "duration_hm": "6:31",
      "num_of_question": "0"
    },
    {
      "id": "3779",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Remove duplicates from a given string (Implementation - C)",
      "duration_hm": "6:46",
      "num_of_question": "0"
    },
    {
      "id": "3600",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Construct a binary tree from post order and inorder",
      "duration_hm": "3:28",
      "num_of_question": "0"
    },
    {
      "id": "3980",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Moore Voting Algorithm File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3632",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Red Black trees",
      "duration_hm": "3:20",
      "num_of_question": "0"
    },
    {
      "id": "3895",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count number of set bits in a number",
      "duration_hm": "4:15",
      "num_of_question": "0"
    },
    {
      "id": "3346",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find kth node from the end of linked list (Hash Approach)",
      "duration_hm": "5:44",
      "num_of_question": "0"
    },
    {
      "id": "3861",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rat in a Maze (Approach - 2)",
      "duration_hm": "3:43",
      "num_of_question": "0"
    },
    {
      "id": "3888",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest path in directed acyclic graph",
      "duration_hm": "10:18",
      "num_of_question": "0"
    },
    {
      "id": "3743",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Search an element in sorted rotated array (Approach-1)",
      "duration_hm": "6:0",
      "num_of_question": "0"
    },
    {
      "id": "3413",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Group all the occurrences of elements order by their first occurrence (Approach - 1)",
      "duration_hm": "6:48",
      "num_of_question": "0"
    },
    {
      "id": "3876",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of boyer-moore string matching algorithm",
      "duration_hm": "10:2",
      "num_of_question": "0"
    },
    {
      "id": "3436",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge overlapping intervals",
      "duration_hm": "4:27",
      "num_of_question": "0"
    },
    {
      "id": "5010",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Boyer-moore string matching algorithm File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3889",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Articulation points in a graph",
      "duration_hm": "18:36",
      "num_of_question": "0"
    },
    {
      "id": "4987",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Rat in a Maze File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3744",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Search an element in sorted rotated array (Approach-2)",
      "duration_hm": "4:10",
      "num_of_question": "0"
    },
    {
      "id": "3414",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Group all the occurrences of elements order by their first occurrence (Approach - 2)",
      "duration_hm": "5:51",
      "num_of_question": "0"
    },
    {
      "id": "3437",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge overlapping intervals (Approach - 2)",
      "duration_hm": "4:10",
      "num_of_question": "0"
    },
    {
      "id": "5041",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Count number of set bits in a number File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3469",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array max heap (Approach-5)",
      "duration_hm": "10:40",
      "num_of_question": "0"
    },
    {
      "id": "4964",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Write an algorithm to remove all duplicates from a given string",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3601",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Mirror Tree (Implementation - C)",
      "duration_hm": "5:10",
      "num_of_question": "0"
    },
    {
      "id": "3633",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Red Black trees (Case - 1)",
      "duration_hm": "3:42",
      "num_of_question": "0"
    },
    {
      "id": "3149",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of finding the majority element in the given array",
      "duration_hm": "9:42",
      "num_of_question": "0"
    },
    {
      "id": "3347",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for kth node from end",
      "duration_hm": "5:33",
      "num_of_question": "0"
    },
    {
      "id": "3470",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a Binary matrix, find the largest square sub matrix with all 1's (Approach - 2)",
      "duration_hm": "11:32",
      "num_of_question": "0"
    },
    {
      "id": "3862",
      "cl_lecture_type": "1",
      "cl_lecture_name": "The Knight Tour problem (Approach -1)",
      "duration_hm": "8:11",
      "num_of_question": "0"
    },
    {
      "id": "4977",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Search an element in sorted rotated array File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3781",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two strings are rotations of each other or not (Approach-1)",
      "duration_hm": "4:9",
      "num_of_question": "0"
    },
    {
      "id": "4006",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find kth node from end File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3634",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Red Black trees (Case - 2)",
      "duration_hm": "5:54",
      "num_of_question": "0"
    },
    {
      "id": "3602",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of convert the given binary tree into its mirror tree",
      "duration_hm": "7:48",
      "num_of_question": "0"
    },
    {
      "id": "3877",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rabin-Karp string matching Algorithm",
      "duration_hm": "3:51",
      "num_of_question": "0"
    },
    {
      "id": "3150",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the maximum difference between two elements in an array such that larger element appears after the smaller number (Approach-1)",
      "duration_hm": "5:0",
      "num_of_question": "0"
    },
    {
      "id": "3471",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Example on Squares submatrix",
      "duration_hm": "7:16",
      "num_of_question": "0"
    },
    {
      "id": "3415",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Group all the occurrences of elements order by their first occurrence (Approach - 3)",
      "duration_hm": "2:15",
      "num_of_question": "0"
    },
    {
      "id": "3479",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array max heap (Implementation - C)",
      "duration_hm": "5:6",
      "num_of_question": "0"
    },
    {
      "id": "3438",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of merge over lapping intervals",
      "duration_hm": "6:7",
      "num_of_question": "0"
    },
    {
      "id": "3896",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether the given number is power of 2",
      "duration_hm": "5:55",
      "num_of_question": "0"
    },
    {
      "id": "4917",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Merge overlapping intervals File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3348",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a linked list, Check if the linked list has loop",
      "duration_hm": "2:45",
      "num_of_question": "0"
    },
    {
      "id": "3863",
      "cl_lecture_type": "1",
      "cl_lecture_name": "The Knight Tour problem (Approach -2)",
      "duration_hm": "7:2",
      "num_of_question": "0"
    },
    {
      "id": "3481",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array max heap (Implementation II - C)",
      "duration_hm": "1:57",
      "num_of_question": "0"
    },
    {
      "id": "3745",
      "cl_lecture_type": "1",
      "cl_lecture_name": "count inversions in an array approach-1",
      "duration_hm": "3:40",
      "num_of_question": "0"
    },
    {
      "id": "3782",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two strings are rotations of each other or not (Approach-2)",
      "duration_hm": "2:53",
      "num_of_question": "0"
    },
    {
      "id": "3635",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Red Black trees (Case - 3)",
      "duration_hm": "9:50",
      "num_of_question": "0"
    },
    {
      "id": "4911",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Group all the occurrences of elements order by their first occurrence",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3878",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find all occurrences of a given word in a matrix",
      "duration_hm": "2:50",
      "num_of_question": "0"
    },
    {
      "id": "3152",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the max difference in an array so that the larger element has higher index than smaller element Approach-2",
      "duration_hm": "8:55",
      "num_of_question": "0"
    },
    {
      "id": "4937",
      "cl_lecture_type": "2",
      "cl_lecture_name": "mirror_tree",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3472",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to the ugly number",
      "duration_hm": "3:51",
      "num_of_question": "0"
    },
    {
      "id": "5042",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether the given number is power of 2 File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3154",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the maximum difference between two elements in an array such that larger element appears after the smaller number (Approach-3)",
      "duration_hm": "6:44",
      "num_of_question": "0"
    },
    {
      "id": "3473",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the kth ugly number (Approach - 1)",
      "duration_hm": "2:53",
      "num_of_question": "0"
    },
    {
      "id": "3439",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether parenthesis balanced or not",
      "duration_hm": "3:14",
      "num_of_question": "0"
    },
    {
      "id": "3897",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a next higher number of a given number which is a power of 2 approach -1",
      "duration_hm": "2:34",
      "num_of_question": "0"
    },
    {
      "id": "3637",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Red Black trees (Case - 4)",
      "duration_hm": "12:40",
      "num_of_question": "0"
    },
    {
      "id": "5011",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Rabin-Karp string matching Algorithm File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4988",
      "cl_lecture_type": "2",
      "cl_lecture_name": "The Knight Tour problem File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3603",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Level order Traversal",
      "duration_hm": "4:59",
      "num_of_question": "0"
    },
    {
      "id": "3349",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a Linked list, Check if the linked list has loop (Approach-1)",
      "duration_hm": "3:22",
      "num_of_question": "0"
    },
    {
      "id": "3482",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find k-largest elements from an array max heap (Implementation III - C)",
      "duration_hm": "2:32",
      "num_of_question": "0"
    },
    {
      "id": "3746",
      "cl_lecture_type": "1",
      "cl_lecture_name": "count inversions in an array approach-2",
      "duration_hm": "13:41",
      "num_of_question": "0"
    },
    {
      "id": "3416",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array A, Count the distinct elements in all windows of size K (Approach - 1)",
      "duration_hm": "5:5",
      "num_of_question": "0"
    },
    {
      "id": "3783",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation to check whether given two string are rotation of each other or not",
      "duration_hm": "3:17",
      "num_of_question": "0"
    },
    {
      "id": "3604",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Level order Traversal (Implementation - C)",
      "duration_hm": "2:43",
      "num_of_question": "0"
    },
    {
      "id": "4965",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Program to check where given strings are rotations to each other with concatenation",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3350",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a Linked list, Check if the linked list has loop (Approach - 2)",
      "duration_hm": "4:42",
      "num_of_question": "0"
    },
    {
      "id": "3747",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of count-inversion in an array",
      "duration_hm": "11:12",
      "num_of_question": "0"
    },
    {
      "id": "3417",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array A, Count the distinct elements in all windows of size K (Approach - 2)",
      "duration_hm": "2:20",
      "num_of_question": "0"
    },
    {
      "id": "3155",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of maximum difference b/w two elements in an array such that larger element has higher index than smaller element",
      "duration_hm": "10:37",
      "num_of_question": "0"
    },
    {
      "id": "3474",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the kth ugly number (Approach - 2)",
      "duration_hm": "13:41",
      "num_of_question": "0"
    },
    {
      "id": "3440",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Stock span problem",
      "duration_hm": "8:21",
      "num_of_question": "0"
    },
    {
      "id": "3484",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for finding K-largest element",
      "duration_hm": "4:19",
      "num_of_question": "0"
    },
    {
      "id": "3898",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a next higher number of a given number which is a power of 2 approach -2",
      "duration_hm": "3:45",
      "num_of_question": "0"
    },
    {
      "id": "3638",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Red Black trees (Case - 5)",
      "duration_hm": "6:24",
      "num_of_question": "0"
    },
    {
      "id": "3864",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find subset of elements that are selected from a given sum adds upto a given number k",
      "duration_hm": "5:49",
      "num_of_question": "0"
    },
    {
      "id": "3475",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Kth ugly number",
      "duration_hm": "4:57",
      "num_of_question": "0"
    },
    {
      "id": "3442",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Stock span problem (Approach - 1)",
      "duration_hm": "16:50",
      "num_of_question": "0"
    },
    {
      "id": "3865",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Solve Sudoku",
      "duration_hm": "3:34",
      "num_of_question": "0"
    },
    {
      "id": "5043",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find a next higher number of a given number which is power of 2",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3784",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Reverse the words in a given sentence",
      "duration_hm": "4:19",
      "num_of_question": "0"
    },
    {
      "id": "4978",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find inversion count of an array using merge sort",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3605",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of level order tree traversal",
      "duration_hm": "9:20",
      "num_of_question": "0"
    },
    {
      "id": "4923",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find k-largest elements from an array max heap",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3351",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a Linked list, Check if the linked list has loop (Approach - 3)",
      "duration_hm": "4:46",
      "num_of_question": "0"
    },
    {
      "id": "3640",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Red Black trees (Case - 6)",
      "duration_hm": "8:58",
      "num_of_question": "0"
    },
    {
      "id": "3418",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array A, Count the distinct elements in all windows of size K (Approach - 3)",
      "duration_hm": "5:37",
      "num_of_question": "0"
    },
    {
      "id": "3981",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the maximum difference between two elements such that larger element appears after the smaller element File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4912",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given an array a count the distinct elements in all windows of size K",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3641",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion Example in Red Black Trees",
      "duration_hm": "12:14",
      "num_of_question": "0"
    },
    {
      "id": "3899",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether the given number is power of 4 approach -1",
      "duration_hm": "2:43",
      "num_of_question": "0"
    },
    {
      "id": "4938",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Level Order Traversal",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4990",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find kth ugly number File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3443",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Stock span problem (Implementation - C)",
      "duration_hm": "6:58",
      "num_of_question": "0"
    },
    {
      "id": "3486",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find median in a stream of numbers (Approach - 1)",
      "duration_hm": "4:58",
      "num_of_question": "0"
    },
    {
      "id": "3748",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Finding the missing number in arithmetic progression approach -1",
      "duration_hm": "5:25",
      "num_of_question": "0"
    },
    {
      "id": "3785",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation to reverse words in given string",
      "duration_hm": "4:18",
      "num_of_question": "0"
    },
    {
      "id": "3156",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the number occurring odd number of times in a given array of size 'n'",
      "duration_hm": "7:34",
      "num_of_question": "0"
    },
    {
      "id": "3352",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Floyd's Cycle-Finding Algorithm",
      "duration_hm": "12:30",
      "num_of_question": "0"
    },
    {
      "id": "3419",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array and a range[low, high], Find the elements that are in the range but not in the array (Approach - 1)",
      "duration_hm": "2:33",
      "num_of_question": "0"
    },
    {
      "id": "3157",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of finding the number occurring odd number of times in given array",
      "duration_hm": "4:32",
      "num_of_question": "0"
    },
    {
      "id": "3353",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for detect a loop in a linked list",
      "duration_hm": "4:23",
      "num_of_question": "0"
    },
    {
      "id": "3476",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest increasing subsequence",
      "duration_hm": "1:57",
      "num_of_question": "0"
    },
    {
      "id": "3642",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Red Black Trees",
      "duration_hm": "3:7",
      "num_of_question": "0"
    },
    {
      "id": "4918",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Stock Span Problem File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3900",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether the given number is power of 4 approach -2",
      "duration_hm": "1:42",
      "num_of_question": "0"
    },
    {
      "id": "4966",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Reverse words in a given string",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3750",
      "cl_lecture_type": "1",
      "cl_lecture_name": "finding the missing number in arithmetic progression approach -2",
      "duration_hm": "4:18",
      "num_of_question": "0"
    },
    {
      "id": "3606",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a lowest common ancestor of a given two nodes in a Binary Search Tree",
      "duration_hm": "10:24",
      "num_of_question": "0"
    },
    {
      "id": "3487",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find median in a stream of numbers (Approach - 2)",
      "duration_hm": "21:6",
      "num_of_question": "0"
    },
    {
      "id": "3786",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Reverse a string",
      "duration_hm": "6:7",
      "num_of_question": "0"
    },
    {
      "id": "3982",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the number occurring odd number of times in a given array of size 'n'",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3607",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a lowest common ancestor of a given two nodes in a Binary Search Tree (Implementation - C)",
      "duration_hm": "2:16",
      "num_of_question": "0"
    },
    {
      "id": "3488",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find median in a stream of numbers (Approach - 3)",
      "duration_hm": "14:38",
      "num_of_question": "0"
    },
    {
      "id": "3420",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array and a range[low, high], Find the elements that are in the range but not in the array (Approach - 2)",
      "duration_hm": "5:1",
      "num_of_question": "0"
    },
    {
      "id": "3354",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the starting node of cycle if cycle exists in a given linked list",
      "duration_hm": "12:28",
      "num_of_question": "0"
    },
    {
      "id": "3477",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest increasing sub sequence (Approach - 1)",
      "duration_hm": "3:18",
      "num_of_question": "0"
    },
    {
      "id": "3444",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Minimum number of bracket reversals needed to make an expression balanced",
      "duration_hm": "4:56",
      "num_of_question": "0"
    },
    {
      "id": "3643",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Red Black Trees (Case - 1)",
      "duration_hm": "0:40",
      "num_of_question": "0"
    },
    {
      "id": "3901",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether the given number is power of 4 approach -3",
      "duration_hm": "4:15",
      "num_of_question": "0"
    },
    {
      "id": "3751",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Finding the missing number in arithmetic progression (Implementation-C)",
      "duration_hm": "7:25",
      "num_of_question": "0"
    },
    {
      "id": "3355",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for find the start node of the loop,if there is a cycle in a link",
      "duration_hm": "2:6",
      "num_of_question": "0"
    },
    {
      "id": "3478",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest increasing sub sequence (Approach - 2)",
      "duration_hm": "18:4",
      "num_of_question": "0"
    },
    {
      "id": "3445",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of minimum number of bracket reversals needed to make an expression balanced",
      "duration_hm": "4:52",
      "num_of_question": "0"
    },
    {
      "id": "3608",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of finding lowest common ancestor in given binary search tree",
      "duration_hm": "5:35",
      "num_of_question": "0"
    },
    {
      "id": "3645",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Double blackness during deletion",
      "duration_hm": "4:54",
      "num_of_question": "0"
    },
    {
      "id": "5044",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether the given number is power of 4 File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3489",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find median in a stream of numbers (Approach - 4)",
      "duration_hm": "10:21",
      "num_of_question": "0"
    },
    {
      "id": "3159",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Separate 0's and 1's in an array ( Approach-1)",
      "duration_hm": "3:40",
      "num_of_question": "0"
    },
    {
      "id": "4979",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find missing number in Arithmetic Progression File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3421",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array and a range[low, high], Find the elements that are in the range but not in the array (Approach - 3)",
      "duration_hm": "1:23",
      "num_of_question": "0"
    },
    {
      "id": "3788",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given string is palindrome or not",
      "duration_hm": "2:36",
      "num_of_question": "0"
    },
    {
      "id": "3480",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Length of longest increasing sub sequence",
      "duration_hm": "3:54",
      "num_of_question": "0"
    },
    {
      "id": "3646",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Red Black Trees (Case - 2)",
      "duration_hm": "2:27",
      "num_of_question": "0"
    },
    {
      "id": "3490",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find median in a stream of numbers",
      "duration_hm": "5:29",
      "num_of_question": "0"
    },
    {
      "id": "3160",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Separate 0's and 1's in an array (Approach-2)",
      "duration_hm": "2:40",
      "num_of_question": "0"
    },
    {
      "id": "3902",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Multiply a given number with 7 without using multiplication",
      "duration_hm": "1:42",
      "num_of_question": "0"
    },
    {
      "id": "3752",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array containing 1's and 0's in which all 0's appear before all 1's then count the number of 1's in an array",
      "duration_hm": "3:31",
      "num_of_question": "0"
    },
    {
      "id": "3789",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the first non-repeating character in a given string (Approach-1)",
      "duration_hm": "2:25",
      "num_of_question": "0"
    },
    {
      "id": "4913",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given an array and a range low and high find the elements that are in range",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4939",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find_LCA_in_BST",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3356",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a Linked list, Check if the linked list has loop (Implementation - C)",
      "duration_hm": "6:56",
      "num_of_question": "0"
    },
    {
      "id": "4919",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Minimum number of brackets reversals needed to make an expression balanced File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3609",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the lowest common ancestor of given two nodes in a binary tree (Approach - 1)",
      "duration_hm": "5:31",
      "num_of_question": "0"
    },
    {
      "id": "3422",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array, print all subarrays in the array which has sum 0 (Approach - 1)",
      "duration_hm": "2:51",
      "num_of_question": "0"
    },
    {
      "id": "3647",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Red Black Trees (Case - 3)",
      "duration_hm": "13:59",
      "num_of_question": "0"
    },
    {
      "id": "4007",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given a Linked list, Check if the linked list has loop and find start node of the loop",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3161",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of separate 0's and 1's in an array",
      "duration_hm": "6:0",
      "num_of_question": "0"
    },
    {
      "id": "3446",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find if an expression has duplicate parenthesis or not",
      "duration_hm": "5:0",
      "num_of_question": "0"
    },
    {
      "id": "4991",
      "cl_lecture_type": "2",
      "cl_lecture_name": "longest_increasing_sub sequence",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3903",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of bit manipulation problems",
      "duration_hm": "6:41",
      "num_of_question": "0"
    },
    {
      "id": "3753",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of given an array containing 1's and 0's in which all 0's appear before all 1's then count the number of 1's in an array",
      "duration_hm": "4:39",
      "num_of_question": "0"
    },
    {
      "id": "3790",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the first non-repeating character in a given string (Approach-2)",
      "duration_hm": "4:2",
      "num_of_question": "0"
    },
    {
      "id": "4924",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find Median in a Stream of Numbers File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3357",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Applications of linked list",
      "duration_hm": "9:19",
      "num_of_question": "0"
    },
    {
      "id": "3447",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find if an expression has duplicate parenthesis or not",
      "duration_hm": "2:36",
      "num_of_question": "0"
    },
    {
      "id": "5045",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Multiply a given number with 7 without using multiplication File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3791",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the first non-repeating character in a given string (Approach - 3)",
      "duration_hm": "4:25",
      "num_of_question": "0"
    },
    {
      "id": "4980",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find number of zeros in an array",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3483",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest decreasing subsequence",
      "duration_hm": "2:53",
      "num_of_question": "0"
    },
    {
      "id": "3610",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the lowest common ancestor of given two nodes in a binary tree (Approach - 2)",
      "duration_hm": "6:17",
      "num_of_question": "0"
    },
    {
      "id": "3491",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given k-sorted lists, Find the minimum range to which at last one number belongs from every list",
      "duration_hm": "17:29",
      "num_of_question": "0"
    },
    {
      "id": "3983",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Separate 0's and 1's in an array File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3423",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array, print all subarrays in the array which has sum 0 (Approach - 2)",
      "duration_hm": "3:6",
      "num_of_question": "0"
    },
    {
      "id": "3648",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Red Black Trees (Case - 4)",
      "duration_hm": "11:25",
      "num_of_question": "0"
    },
    {
      "id": "3485",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of length of longest decreasing sub sequence",
      "duration_hm": "4:13",
      "num_of_question": "0"
    },
    {
      "id": "3424",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array, print all subarrays in the array which has sum 0 (Approach - 3)",
      "duration_hm": "3:10",
      "num_of_question": "0"
    },
    {
      "id": "3754",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array 2n integer in the following format a1,a2,a3,.... b1,b2,bn shuffle the array to a1b1 a2b2 a3b3... anbn approach-1",
      "duration_hm": "2:35",
      "num_of_question": "0"
    },
    {
      "id": "4920",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find if an expression has duplicate parenthesis or not File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3649",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Red Black Trees (Case - 5)",
      "duration_hm": "10:52",
      "num_of_question": "0"
    },
    {
      "id": "3359",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Intersect point of two single linked lists",
      "duration_hm": "4:35",
      "num_of_question": "0"
    },
    {
      "id": "3792",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find first non-repeating character from a stream of characters",
      "duration_hm": "11:58",
      "num_of_question": "0"
    },
    {
      "id": "3611",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a lowest common ancestor of a given two nodes in a binary tree (Implementation - C)",
      "duration_hm": "3:4",
      "num_of_question": "0"
    },
    {
      "id": "3492",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of given k-sorted lists,find range to which at least one number belongs from every list",
      "duration_hm": "12:39",
      "num_of_question": "0"
    },
    {
      "id": "3176",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array A, Find two elements whose sum is closest to zero",
      "duration_hm": "6:3",
      "num_of_question": "0"
    },
    {
      "id": "4992",
      "cl_lecture_type": "2",
      "cl_lecture_name": "longest_decreasing_sub sequence",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3612",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of finding the lowest common ancestor in given binary tree",
      "duration_hm": "7:23",
      "num_of_question": "0"
    },
    {
      "id": "4925",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given k-sorted lists,find range to which atleast one number belongs from every list File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3179",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for finding the pair in the given array whose sum is closest to Zero",
      "duration_hm": "10:34",
      "num_of_question": "0"
    },
    {
      "id": "3448",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Celebrity problem approach-1 and 2",
      "duration_hm": "3:17",
      "num_of_question": "0"
    },
    {
      "id": "3650",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Red Black Trees (Case - 6)",
      "duration_hm": "10:21",
      "num_of_question": "0"
    },
    {
      "id": "3360",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Intersect point of two single linked lists (Approach - 2)",
      "duration_hm": "5:30",
      "num_of_question": "0"
    },
    {
      "id": "4914",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given an array print all sub arrays in the array which has sum 0",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4967",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the first non-repeating character in a given string File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3756",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array 2n integer in the fallowing format a1,a2,a3,.... b1,b2,bn shuffle the array to a1b1 a2b2 a3b3... anbn approach-2",
      "duration_hm": "5:54",
      "num_of_question": "0"
    },
    {
      "id": "3793",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Run length encoding",
      "duration_hm": "2:22",
      "num_of_question": "0"
    },
    {
      "id": "3984",
      "cl_lecture_type": "2",
      "cl_lecture_name": "sum of two elements closest to zero File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3361",
      "cl_lecture_type": "1",
      "cl_lecture_name": " Intersect point of two single linked lists (Approach - 3)",
      "duration_hm": "6:34",
      "num_of_question": "0"
    },
    {
      "id": "3493",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Perfect hill sequence",
      "duration_hm": "13:50",
      "num_of_question": "0"
    },
    {
      "id": "3757",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Given an array 2n integer in the following format a1,a2,a3,.... b1,b2,bn shuffle the array to a1b1 a2b2 a3b3",
      "duration_hm": "3:36",
      "num_of_question": "0"
    },
    {
      "id": "3652",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion Example in Red Black Trees",
      "duration_hm": "22:8",
      "num_of_question": "0"
    },
    {
      "id": "3425",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find four elements i,j,k and l in an array such that i+j=k+l (Approach - 1)",
      "duration_hm": "2:25",
      "num_of_question": "0"
    },
    {
      "id": "3494",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert given max heap to min heap",
      "duration_hm": "1:39",
      "num_of_question": "0"
    },
    {
      "id": "3449",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Celebrity problem approach-3",
      "duration_hm": "2:27",
      "num_of_question": "0"
    },
    {
      "id": "4940",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find_LCA_in_BT",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3495",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation for converting minheap to maxheap",
      "duration_hm": "5:55",
      "num_of_question": "0"
    },
    {
      "id": "3794",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of run length encoding",
      "duration_hm": "8:38",
      "num_of_question": "0"
    },
    {
      "id": "3362",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Intersect point of two single linked lists (Approach - 4)",
      "duration_hm": "4:34",
      "num_of_question": "0"
    },
    {
      "id": "3613",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert a given binary tree into Doubly linked list (Approach-1)",
      "duration_hm": "13:16",
      "num_of_question": "0"
    },
    {
      "id": "3499",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Edit distance (Approach - 1)",
      "duration_hm": "6:39",
      "num_of_question": "0"
    },
    {
      "id": "3181",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a triplet in given array that sum to given value 'x' Approach-1",
      "duration_hm": "5:9",
      "num_of_question": "0"
    },
    {
      "id": "3758",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given a sorted array of non repeated integer a[1---n], check whether there is an index i for which a[i] =i",
      "duration_hm": "6:15",
      "num_of_question": "0"
    },
    {
      "id": "3653",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Maximum height of a Red Black Tree",
      "duration_hm": "6:34",
      "num_of_question": "0"
    },
    {
      "id": "3426",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find four elements i,j,k and l in an array such that i+j=k+l (Approach - 2)",
      "duration_hm": "5:2",
      "num_of_question": "0"
    },
    {
      "id": "3363",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Intersect point of two single linked lists (Approach - 5)",
      "duration_hm": "3:35",
      "num_of_question": "0"
    },
    {
      "id": "3614",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert a given binary tree into Doubly linked list (Approach-2)",
      "duration_hm": "4:9",
      "num_of_question": "0"
    },
    {
      "id": "3190",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find a triplet in given array that sum to given value 'x' Approach-2",
      "duration_hm": "5:15",
      "num_of_question": "0"
    },
    {
      "id": "3505",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Edit distance (Approach - 2)",
      "duration_hm": "13:48",
      "num_of_question": "0"
    },
    {
      "id": "3759",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of Given a sorted array of non repeated integer a[1---n], check whether there is an index i for which a[i] =i",
      "duration_hm": "3:47",
      "num_of_question": "0"
    },
    {
      "id": "3427",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find four elements i,j,k and l in an array such that i+j=k+l (Approach - 3)",
      "duration_hm": "2:5",
      "num_of_question": "0"
    },
    {
      "id": "4968",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Run length encoding File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4926",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Convert Minheap to Maxheap",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3655",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Comparison between AVL Tree and Red Black Tree",
      "duration_hm": "3:2",
      "num_of_question": "0"
    },
    {
      "id": "3656",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to B-Trees",
      "duration_hm": "3:37",
      "num_of_question": "0"
    },
    {
      "id": "4915",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find four elements i,j,k,l in an array such that i+j=k+l",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3364",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for find intersection point of two linked list",
      "duration_hm": "7:34",
      "num_of_question": "0"
    },
    {
      "id": "3615",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert a given binary tree into Doubly linked list (Approach-3)",
      "duration_hm": "2:9",
      "num_of_question": "0"
    },
    {
      "id": "3496",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print out all numbers in the form of a^3 + b^3",
      "duration_hm": "7:33",
      "num_of_question": "0"
    },
    {
      "id": "3191",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for find a triplet that sum to a given value",
      "duration_hm": "10:57",
      "num_of_question": "0"
    },
    {
      "id": "3506",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Edit Distance",
      "duration_hm": "3:55",
      "num_of_question": "0"
    },
    {
      "id": "3760",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the maximum element index in an array which is first increasing and then decreasing",
      "duration_hm": "5:56",
      "num_of_question": "0"
    },
    {
      "id": "3795",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two strings are anagrams each other",
      "duration_hm": "4:16",
      "num_of_question": "0"
    },
    {
      "id": "3761",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find maximum element index in an array which is first increasing and then decreasing",
      "duration_hm": "4:9",
      "num_of_question": "0"
    },
    {
      "id": "3796",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given two strings are anagrams each other (Implementation - C)",
      "duration_hm": "6:19",
      "num_of_question": "0"
    },
    {
      "id": "3985",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given an array A, Find three element such that their sum is equal to X File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4993",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Edit_distance",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3657",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Structure of B-Tree",
      "duration_hm": "12:39",
      "num_of_question": "0"
    },
    {
      "id": "3616",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of convert a given binary tree into doubly linket list",
      "duration_hm": "4:5",
      "num_of_question": "0"
    },
    {
      "id": "4008",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Intersect point of two single linked lists File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3497",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Printout all numbers in the form of a^3+b^3",
      "duration_hm": "9:51",
      "num_of_question": "0"
    },
    {
      "id": "3192",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the equilibrium index in an array",
      "duration_hm": "7:42",
      "num_of_question": "0"
    },
    {
      "id": "3507",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Largest sum independent set in binary tree (Approach - 1)",
      "duration_hm": "2:21",
      "num_of_question": "0"
    },
    {
      "id": "4927",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Printout all numbers in the form of a^3+b^3 File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3659",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Searching in B-Tree",
      "duration_hm": "5:39",
      "num_of_question": "0"
    },
    {
      "id": "4941",
      "cl_lecture_type": "2",
      "cl_lecture_name": "least common ancestor of two nodes in binary search tree",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4981",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Get maximum element in which all elements are distinct",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4969",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether given two strings are anagrams each other File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3365",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Alternating split of a given linked list",
      "duration_hm": "6:51",
      "num_of_question": "0"
    },
    {
      "id": "3366",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Alternating split of a given linked list",
      "duration_hm": "5:34",
      "num_of_question": "0"
    },
    {
      "id": "3617",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the Diameter of a given binary tree",
      "duration_hm": "6:32",
      "num_of_question": "0"
    },
    {
      "id": "3498",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert BST to Max Heap",
      "duration_hm": "7:47",
      "num_of_question": "0"
    },
    {
      "id": "3193",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for equlibrium index in an array",
      "duration_hm": "7:55",
      "num_of_question": "0"
    },
    {
      "id": "3508",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Largest sum independent set in binary tree (Approach - 2)",
      "duration_hm": "11:20",
      "num_of_question": "0"
    },
    {
      "id": "3762",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Search an element in row wise and column wise sorted 2d array",
      "duration_hm": "7:42",
      "num_of_question": "0"
    },
    {
      "id": "3797",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find excel column name for given excel column number",
      "duration_hm": "7:31",
      "num_of_question": "0"
    },
    {
      "id": "3660",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in B-Tree",
      "duration_hm": "11:41",
      "num_of_question": "0"
    },
    {
      "id": "3798",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find excel column name for given excel column number",
      "duration_hm": "3:55",
      "num_of_question": "0"
    },
    {
      "id": "3500",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of BST to Max Heap",
      "duration_hm": "1:0",
      "num_of_question": "0"
    },
    {
      "id": "3661",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in B-Tree",
      "duration_hm": "14:7",
      "num_of_question": "0"
    },
    {
      "id": "3510",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Largest sum Independent set",
      "duration_hm": "6:1",
      "num_of_question": "0"
    },
    {
      "id": "4009",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Alternating split of a given linked list File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3618",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the Diameter of a given binary tree (Implementation - C)",
      "duration_hm": "4:9",
      "num_of_question": "0"
    },
    {
      "id": "3763",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Search an element in row wise and column wise sorted 2d array",
      "duration_hm": "2:30",
      "num_of_question": "0"
    },
    {
      "id": "3986",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the equilibrium index in an array File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4982",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Search an element in row wise and column wise 2d sorted array",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4970",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find excel column name for given excel column number",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4928",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Convert BST to Max Heap File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3662",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in B-Trees Example",
      "duration_hm": "11:59",
      "num_of_question": "0"
    },
    {
      "id": "3511",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the number of n-bit integers which do not have any two consequent zeros (Approach - 1)",
      "duration_hm": "1:5",
      "num_of_question": "0"
    },
    {
      "id": "3368",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Cloning the list",
      "duration_hm": "2:26",
      "num_of_question": "0"
    },
    {
      "id": "4942",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Diameter_of_Binary Tree",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3194",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array of size unknown with all 0's in the beginning and 1's in the end. Find the starting index of 1",
      "duration_hm": "4:10",
      "num_of_question": "0"
    },
    {
      "id": "3512",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the number of n-bit integers which do not have any two consequent zeros (Approach - 2)",
      "duration_hm": "4:9",
      "num_of_question": "0"
    },
    {
      "id": "3370",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Application for Cloning the list",
      "duration_hm": "5:6",
      "num_of_question": "0"
    },
    {
      "id": "3619",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Get the level of a given key in a binary tree",
      "duration_hm": "6:52",
      "num_of_question": "0"
    },
    {
      "id": "3195",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array and an integer k, find the maximum for each and every contiguous sub array of size k Approach-1",
      "duration_hm": "2:52",
      "num_of_question": "0"
    },
    {
      "id": "3764",
      "cl_lecture_type": "1",
      "cl_lecture_name": "External sorting",
      "duration_hm": "2:21",
      "num_of_question": "0"
    },
    {
      "id": "3799",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the smallest window in a string containing all characters of another string",
      "duration_hm": "4:23",
      "num_of_question": "0"
    },
    {
      "id": "3501",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Choosing an effective data structure",
      "duration_hm": "3:30",
      "num_of_question": "0"
    },
    {
      "id": "3663",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to B+ Trees",
      "duration_hm": "8:42",
      "num_of_question": "0"
    },
    {
      "id": "3664",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Structure of leaf nodes in a B+Trees",
      "duration_hm": "6:41",
      "num_of_question": "0"
    },
    {
      "id": "3513",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find the number of n-bit integers which don't have any two consequent zeros",
      "duration_hm": "2:8",
      "num_of_question": "0"
    },
    {
      "id": "3372",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Cloning the list (Approach - 1)",
      "duration_hm": "6:7",
      "num_of_question": "0"
    },
    {
      "id": "3620",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print nodes k-distance from root (Approach-1)",
      "duration_hm": "10:23",
      "num_of_question": "0"
    },
    {
      "id": "3196",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array and an integer k, find the maximum for each and every contiguous sub array of size k Approach-2",
      "duration_hm": "2:59",
      "num_of_question": "0"
    },
    {
      "id": "3765",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find median of two sorted arrays",
      "duration_hm": "12:57",
      "num_of_question": "0"
    },
    {
      "id": "3800",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the smallest window in a string continuing all characters of another string approach-2",
      "duration_hm": "16:34",
      "num_of_question": "0"
    },
    {
      "id": "3502",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the kth largest element in a stream Approach-1",
      "duration_hm": "3:10",
      "num_of_question": "0"
    },
    {
      "id": "3197",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given an array and an integer k, find the maximum for each and every contiguous sub array of size k Approach-3",
      "duration_hm": "10:28",
      "num_of_question": "0"
    },
    {
      "id": "3766",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of Median of 2 array",
      "duration_hm": "8:46",
      "num_of_question": "0"
    },
    {
      "id": "4943",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Print nodes_K dist",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3801",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find the smallest window in a string containing all characters of another string",
      "duration_hm": "12:53",
      "num_of_question": "0"
    },
    {
      "id": "3503",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the kth largest element in a stream Approach-2",
      "duration_hm": "2:7",
      "num_of_question": "0"
    },
    {
      "id": "3665",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Searching in B+Trees",
      "duration_hm": "2:42",
      "num_of_question": "0"
    },
    {
      "id": "3373",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Cloning the list (Approach - 2)",
      "duration_hm": "9:44",
      "num_of_question": "0"
    },
    {
      "id": "4994",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the number of n-bit integers which do not have any two consequent zeros",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3666",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in B+ Trees",
      "duration_hm": "10:25",
      "num_of_question": "0"
    },
    {
      "id": "3374",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Cloning the list (Approach - 3)",
      "duration_hm": "10:17",
      "num_of_question": "0"
    },
    {
      "id": "3198",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of Given an array and an integer k, find the maximum for each and every contiguous sub array of size",
      "duration_hm": "7:37",
      "num_of_question": "0"
    },
    {
      "id": "3767",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of find peak element",
      "duration_hm": "6:43",
      "num_of_question": "0"
    },
    {
      "id": "4971",
      "cl_lecture_type": "2",
      "cl_lecture_name": "C program to find smallest window containing all characters of a pattern",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3504",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the kth largest element in a stream Approach-3",
      "duration_hm": "1:47",
      "num_of_question": "0"
    },
    {
      "id": "3514",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Word breaking problem (Approach - 1)",
      "duration_hm": "3:55",
      "num_of_question": "0"
    },
    {
      "id": "3621",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print nodes which are at k distance from a given key in a binary tree",
      "duration_hm": "9:11",
      "num_of_question": "0"
    },
    {
      "id": "3987",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given an array and an integer k, find the maximum element for each and every contiguous sub array of size",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3630",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of print nodes which are at k distance from a given key in a binary Tree",
      "duration_hm": "7:9",
      "num_of_question": "0"
    },
    {
      "id": "3667",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in B+Trees",
      "duration_hm": "6:21",
      "num_of_question": "0"
    },
    {
      "id": "3804",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find first non-repeating character from a stream of characters Approach-1",
      "duration_hm": "2:23",
      "num_of_question": "0"
    },
    {
      "id": "3516",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Word breaking problem (Approach - 2)",
      "duration_hm": "6:47",
      "num_of_question": "0"
    },
    {
      "id": "3376",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Cloning the list (Approach - 4)",
      "duration_hm": "12:14",
      "num_of_question": "0"
    },
    {
      "id": "3509",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation to find k-largest element in a stream of elements",
      "duration_hm": "5:25",
      "num_of_question": "0"
    },
    {
      "id": "3768",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of Get first one",
      "duration_hm": "6:12",
      "num_of_question": "0"
    },
    {
      "id": "3668",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Splay Trees",
      "duration_hm": "3:55",
      "num_of_question": "0"
    },
    {
      "id": "3805",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find first non-repeating character from a stream of characters Approach-2",
      "duration_hm": "3:45",
      "num_of_question": "0"
    },
    {
      "id": "3381",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Cloning the list (Implementation -C)",
      "duration_hm": "17:2",
      "num_of_question": "0"
    },
    {
      "id": "3515",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Tournment tree",
      "duration_hm": "3:32",
      "num_of_question": "0"
    },
    {
      "id": "3518",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Word breaking problem(Dynamic Programming) (Approach - 2)",
      "duration_hm": "14:44",
      "num_of_question": "0"
    },
    {
      "id": "4944",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Print nodes which are at k-distance from a given key in a binary tree File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3199",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count number of smaller elements on right of each element in an array",
      "duration_hm": "10:40",
      "num_of_question": "0"
    },
    {
      "id": "3636",
      "cl_lecture_type": "1",
      "cl_lecture_name": "vertical tree order traversal introduction",
      "duration_hm": "4:16",
      "num_of_question": "0"
    },
    {
      "id": "3200",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of count number of smaller elements on right of each element in an array",
      "duration_hm": "1:31",
      "num_of_question": "0"
    },
    {
      "id": "3669",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Searching in Splay Trees",
      "duration_hm": "1:56",
      "num_of_question": "0"
    },
    {
      "id": "3383",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Cloning the list (Implementation II - C)",
      "duration_hm": "14:8",
      "num_of_question": "0"
    },
    {
      "id": "3519",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Partition problem (Approach - 1)",
      "duration_hm": "1:51",
      "num_of_question": "0"
    },
    {
      "id": "4929",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Tournament Tree node File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4972",
      "cl_lecture_type": "2",
      "cl_lecture_name": "First non-repeating char from stream of chars File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3517",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all elements in sorted order in row wise and column wise sorted matrix Approach 1",
      "duration_hm": "2:56",
      "num_of_question": "0"
    },
    {
      "id": "3639",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Vertical tree order traversal (Approach-1)",
      "duration_hm": "6:28",
      "num_of_question": "0"
    },
    {
      "id": "3520",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Partition problem (Approach - 2)",
      "duration_hm": "2:29",
      "num_of_question": "0"
    },
    {
      "id": "3806",
      "cl_lecture_type": "1",
      "cl_lecture_name": "All combinations of string that can be used to dial a number",
      "duration_hm": "4:49",
      "num_of_question": "0"
    },
    {
      "id": "3988",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Count smaller elements on right side File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3670",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Splay Trees",
      "duration_hm": "7:18",
      "num_of_question": "0"
    },
    {
      "id": "3384",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for clone a linked list with next and random pointer",
      "duration_hm": "12:2",
      "num_of_question": "0"
    },
    {
      "id": "3671",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in splay trees",
      "duration_hm": "6:43",
      "num_of_question": "0"
    },
    {
      "id": "3644",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation of Print a Binary Tree in Vertical order set-1",
      "duration_hm": "12:48",
      "num_of_question": "0"
    },
    {
      "id": "3530",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all elements in sorted order in row wise and column wise sorted matrix Approach 2",
      "duration_hm": "3:15",
      "num_of_question": "0"
    },
    {
      "id": "3207",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the largest multiple of 3",
      "duration_hm": "7:3",
      "num_of_question": "0"
    },
    {
      "id": "3521",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Partition problem",
      "duration_hm": "3:44",
      "num_of_question": "0"
    },
    {
      "id": "4010",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Cloning a linked list File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3807",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Minimum number of palindromic subsequences to be removed to empty a balanced tree",
      "duration_hm": "3:57",
      "num_of_question": "0"
    },
    {
      "id": "3209",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Find max multiple of 3",
      "duration_hm": "8:48",
      "num_of_question": "0"
    },
    {
      "id": "3651",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Vertical tree order traversal (Approach-2)",
      "duration_hm": "6:22",
      "num_of_question": "0"
    },
    {
      "id": "3387",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given linked list is palindrome or not (Approach - 3)",
      "duration_hm": "8:4",
      "num_of_question": "0"
    },
    {
      "id": "3808",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation to minimum number of palindrome subsequence file",
      "duration_hm": "1:52",
      "num_of_question": "0"
    },
    {
      "id": "4931",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Print all elements in sorted order in row wise and column wise sorted matrix",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4995",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Partition problem File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3672",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Binomial Heaps",
      "duration_hm": "6:51",
      "num_of_question": "0"
    },
    {
      "id": "3989",
      "cl_lecture_type": "2",
      "cl_lecture_name": "C code for largest multiple of 3 File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3673",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Properties of Binomial Trees",
      "duration_hm": "3:7",
      "num_of_question": "0"
    },
    {
      "id": "3522",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest palindromic sub sequence (Approach - 1)",
      "duration_hm": "2:18",
      "num_of_question": "0"
    },
    {
      "id": "3654",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Print a Binary Tree in Vertical order set-2 using hash table",
      "duration_hm": "7:20",
      "num_of_question": "0"
    },
    {
      "id": "3385",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given linked list is palindrome or not",
      "duration_hm": "10:1",
      "num_of_question": "0"
    },
    {
      "id": "3809",
      "cl_lecture_type": "1",
      "cl_lecture_name": "check if given sequences of moves for a robot is circular or not",
      "duration_hm": "3:53",
      "num_of_question": "0"
    },
    {
      "id": "3531",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Sort a nearly sorted array Approach-1",
      "duration_hm": "1:20",
      "num_of_question": "0"
    },
    {
      "id": "3810",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check if given sequences of moves for a robot is circular or not",
      "duration_hm": "3:53",
      "num_of_question": "0"
    },
    {
      "id": "3674",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Properties of Binomial Heaps",
      "duration_hm": "3:28",
      "num_of_question": "0"
    },
    {
      "id": "3263",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the sub array with given sum X (Approach-1)",
      "duration_hm": "11:41",
      "num_of_question": "0"
    },
    {
      "id": "3523",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest palindromic sub sequence (Approach - 2)",
      "duration_hm": "1:8",
      "num_of_question": "0"
    },
    {
      "id": "3386",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given linked list is palindrome or not (Approach - 2)",
      "duration_hm": "6:48",
      "num_of_question": "0"
    },
    {
      "id": "3658",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Vertical tree order traversal (Approach-3)",
      "duration_hm": "8:53",
      "num_of_question": "0"
    },
    {
      "id": "3534",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Sort a nearly sorted array Approach-2",
      "duration_hm": "2:0",
      "num_of_question": "0"
    },
    {
      "id": "3537",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of sort a nearly sorted array",
      "duration_hm": "5:59",
      "num_of_question": "0"
    },
    {
      "id": "4973",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Robot is circular or not",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3388",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given linked list is palindrome or not (Implementation - C)",
      "duration_hm": "12:11",
      "num_of_question": "0"
    },
    {
      "id": "3699",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of vertical tree order traversal",
      "duration_hm": "3:31",
      "num_of_question": "0"
    },
    {
      "id": "3675",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Structure of Binomial Heaps",
      "duration_hm": "7:4",
      "num_of_question": "0"
    },
    {
      "id": "3264",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the sub array with given sum X (Approach-2)",
      "duration_hm": "6:51",
      "num_of_question": "0"
    },
    {
      "id": "3524",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest palindromic sub sequence (Approach - 3)",
      "duration_hm": "16:35",
      "num_of_question": "0"
    },
    {
      "id": "4945",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Vertical Tree order traversal File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3676",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the minimum key in a Binomial Min Heap",
      "duration_hm": "2:23",
      "num_of_question": "0"
    },
    {
      "id": "3525",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Longest palindromic subsequence",
      "duration_hm": "3:39",
      "num_of_question": "0"
    },
    {
      "id": "3811",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of check if given sequence of moves for a robot is circular or not",
      "duration_hm": "6:47",
      "num_of_question": "0"
    },
    {
      "id": "3266",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the sub array with given sum zero (Approach-3)",
      "duration_hm": "1:15",
      "num_of_question": "0"
    },
    {
      "id": "4932",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Sort a nearly Sorted Array File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3389",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge two sorted linked lists into one sorted linked list",
      "duration_hm": "4:38",
      "num_of_question": "0"
    },
    {
      "id": "3265",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find the subarray with given sum'x'",
      "duration_hm": "4:9",
      "num_of_question": "0"
    },
    {
      "id": "3390",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge two sorted linked lists into one sorted linked list (Approach - 2)",
      "duration_hm": "7:12",
      "num_of_question": "0"
    },
    {
      "id": "3540",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given n-ropes with different length,connect with minimum cost",
      "duration_hm": "4:10",
      "num_of_question": "0"
    },
    {
      "id": "3677",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Union of two Binomial Min Heaps",
      "duration_hm": "13:44",
      "num_of_question": "0"
    },
    {
      "id": "3720",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Vertical sum of a given binary tree",
      "duration_hm": "2:31",
      "num_of_question": "0"
    },
    {
      "id": "4996",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Longest Palindromic Sub sequence File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3812",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Maximum and minimum of an array using minimum number of comparison Approach-1",
      "duration_hm": "6:6",
      "num_of_question": "0"
    },
    {
      "id": "3678",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Example on union of two Binomial Min Heaps",
      "duration_hm": "4:26",
      "num_of_question": "0"
    },
    {
      "id": "3542",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of given n-ropes with different length,connect with minimum cost",
      "duration_hm": "1:43",
      "num_of_question": "0"
    },
    {
      "id": "3813",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Maximum and minimum of an array using minimum number of comparison Approach-2",
      "duration_hm": "7:8",
      "num_of_question": "0"
    },
    {
      "id": "5777",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the subarray with given sum'x' ",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3526",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Number of ways to reach the top of n-stairs (Approach - 1)",
      "duration_hm": "2:32",
      "num_of_question": "0"
    },
    {
      "id": "3391",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge two sorted linked list into one sorted linked list (Implementation-C)",
      "duration_hm": "16:58",
      "num_of_question": "0"
    },
    {
      "id": "4962",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of vertical sum of a given binary tree",
      "duration_hm": "2:46",
      "num_of_question": "0"
    },
    {
      "id": "4933",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given n-ropes with different length,connect with minimum cost File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3527",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Number of ways to reach the top of n-stairs (Approach - 2)",
      "duration_hm": "4:19",
      "num_of_question": "0"
    },
    {
      "id": "4011",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Merge two sorted linked lists File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4946",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Vertical sum of a given binary tree File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3991",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the sub array with given sum zero File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3679",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insert a node into Binomial Min Heap",
      "duration_hm": "9:0",
      "num_of_question": "0"
    },
    {
      "id": "3814",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of maximum and minimum of an array using minimum number of comparisons",
      "duration_hm": "5:30",
      "num_of_question": "0"
    },
    {
      "id": "3268",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the largest sub array with equal number of 0's and 1's",
      "duration_hm": "4:21",
      "num_of_question": "0"
    },
    {
      "id": "3721",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check wheather the given binary tree is sum tree or not",
      "duration_hm": "11:11",
      "num_of_question": "0"
    },
    {
      "id": "3392",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge K-sorted linked lists",
      "duration_hm": "2:33",
      "num_of_question": "0"
    },
    {
      "id": "3545",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given binary tree is max heap (or) not",
      "duration_hm": "7:2",
      "num_of_question": "0"
    },
    {
      "id": "3528",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of number of ways to reach the top of n-stairs",
      "duration_hm": "1:31",
      "num_of_question": "0"
    },
    {
      "id": "4974",
      "cl_lecture_type": "2",
      "cl_lecture_name": "If n is odd then initialize min and max as first element",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3680",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Extract minimum from a Binomial Min Heap",
      "duration_hm": "4:15",
      "num_of_question": "0"
    },
    {
      "id": "3815",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert one string to another string using minimum number of given operation",
      "duration_hm": "3:30",
      "num_of_question": "0"
    },
    {
      "id": "4997",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Number of ways to reach the top of n-stairs File ",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3681",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Example on Extracting minimum from a Binomial Min Heap",
      "duration_hm": "3:31",
      "num_of_question": "0"
    },
    {
      "id": "3270",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the largest sub array with equal number of 0's and 1's (Approach - 2)",
      "duration_hm": "8:55",
      "num_of_question": "0"
    },
    {
      "id": "3722",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of check whether the given binary tree is sum tree or not",
      "duration_hm": "3:46",
      "num_of_question": "0"
    },
    {
      "id": "3393",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge k-sorted linked lists (Heap Approach)",
      "duration_hm": "21:26",
      "num_of_question": "0"
    },
    {
      "id": "3548",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given k-sorted arrays of size n each merge them",
      "duration_hm": "8:8",
      "num_of_question": "0"
    },
    {
      "id": "3557",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Given k-sorted array of size n each merge them",
      "duration_hm": "11:35",
      "num_of_question": "0"
    },
    {
      "id": "3816",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print concatenation of zig-zag string in k-rows",
      "duration_hm": "4:40",
      "num_of_question": "0"
    },
    {
      "id": "3682",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Decreasing a key in Binomial Min Heap",
      "duration_hm": "5:17",
      "num_of_question": "0"
    },
    {
      "id": "4947",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether the given tree is sum tree or not File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3272",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for find the largest subarray with equal number of 0's and 1's",
      "duration_hm": "36:23",
      "num_of_question": "0"
    },
    {
      "id": "3529",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest non-overlapping repeating sub string (Approach - 1)",
      "duration_hm": "3:17",
      "num_of_question": "0"
    },
    {
      "id": "3394",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge K-sorted linked lists (Approach-3)",
      "duration_hm": "7:28",
      "num_of_question": "0"
    },
    {
      "id": "3683",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deleting a node from Binomial Min Heap",
      "duration_hm": "2:56",
      "num_of_question": "0"
    },
    {
      "id": "3532",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest non-overlapping repeating sub string (Approach - 2)",
      "duration_hm": "16:1",
      "num_of_question": "0"
    },
    {
      "id": "3395",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge k-sorted linked lists ( Binary Search Tree Approach)",
      "duration_hm": "2:42",
      "num_of_question": "0"
    },
    {
      "id": "4934",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Given k-sorted array of size n each merge them File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3992",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the largest sub array with equal number of 0's and 1's File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3723",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print Top view of a Binary tree",
      "duration_hm": "3:54",
      "num_of_question": "0"
    },
    {
      "id": "3817",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Remove adjacent duplicate characters in a given string",
      "duration_hm": "18:12",
      "num_of_question": "0"
    },
    {
      "id": "4948",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Print Top View of Binary Tree File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3274",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Product of array without using division operator",
      "duration_hm": "6:37",
      "num_of_question": "0"
    },
    {
      "id": "3684",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Skip List",
      "duration_hm": "7:25",
      "num_of_question": "0"
    },
    {
      "id": "3533",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Minimum cost identical string(Approach - 1)",
      "duration_hm": "4:9",
      "num_of_question": "0"
    },
    {
      "id": "3396",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of merge k-sorted linked list",
      "duration_hm": "7:57",
      "num_of_question": "0"
    },
    {
      "id": "3724",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print Bottom view of a Binary tree",
      "duration_hm": "3:5",
      "num_of_question": "0"
    },
    {
      "id": "3535",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Minimum cost identical string(Approach - 2)",
      "duration_hm": "22:11",
      "num_of_question": "0"
    },
    {
      "id": "4012",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Merge K-Sorted linked lists File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3278",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of product of all elements in the given array except arr[i] without using division operator",
      "duration_hm": "13:1",
      "num_of_question": "0"
    },
    {
      "id": "3685",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Searching in Skip List",
      "duration_hm": "7:49",
      "num_of_question": "0"
    },
    {
      "id": "3397",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Merge sort on linked list",
      "duration_hm": "4:7",
      "num_of_question": "0"
    },
    {
      "id": "3993",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Product of array without using division operator File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3686",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Skip List",
      "duration_hm": "13:26",
      "num_of_question": "0"
    },
    {
      "id": "3725",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print Left view of a Binary tree",
      "duration_hm": "6:40",
      "num_of_question": "0"
    },
    {
      "id": "3536",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of minimum cost identical string",
      "duration_hm": "3:17",
      "num_of_question": "0"
    },
    {
      "id": "3280",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Sort nearly sorted array using insertion sort",
      "duration_hm": "3:34",
      "num_of_question": "0"
    },
    {
      "id": "3726",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print Left view of a Binary tree (Implementation - C)",
      "duration_hm": "2:17",
      "num_of_question": "0"
    },
    {
      "id": "4998",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Minimum cost identical string File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3398",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Greatest value node in linked list on its right side",
      "duration_hm": "7:2",
      "num_of_question": "0"
    },
    {
      "id": "3687",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Skip List",
      "duration_hm": "3:10",
      "num_of_question": "0"
    },
    {
      "id": "3399",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for finding Greatest value node in linked list on its right side",
      "duration_hm": "5:52",
      "num_of_question": "0"
    },
    {
      "id": "3688",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Trie",
      "duration_hm": "2:24",
      "num_of_question": "0"
    },
    {
      "id": "3727",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Remove all paths of length",
      "duration_hm": "7:12",
      "num_of_question": "0"
    },
    {
      "id": "3538",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count the number of times a string occurred as a sub sequence of other string",
      "duration_hm": "2:35",
      "num_of_question": "0"
    },
    {
      "id": "3994",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Sort nearly sorted array using insertion sort File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3539",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Count the number of times a string occured as a subsequence of other string",
      "duration_hm": "20:50",
      "num_of_question": "0"
    },
    {
      "id": "3281",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the duplicate in o(n) time and o(1) extra space",
      "duration_hm": "2:15",
      "num_of_question": "0"
    },
    {
      "id": "3689",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Building a Trie",
      "duration_hm": "5:57",
      "num_of_question": "0"
    },
    {
      "id": "4949",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Remove paths_Less than k",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4013",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Greatest value node in linked list on its right side File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3729",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether a given binary tree is sub tree of another binary tree (Approach-1)",
      "duration_hm": "6:58",
      "num_of_question": "0"
    },
    {
      "id": "3400",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Memory efficient Double Linked List",
      "duration_hm": "7:4",
      "num_of_question": "0"
    },
    {
      "id": "3282",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find the duplicate in o(n) time and o(1) extra space",
      "duration_hm": "1:23",
      "num_of_question": "0"
    },
    {
      "id": "4999",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Count the number of times a sting occurred as a sub sequence of other string",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3690",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation, insertion and searching in a Trie",
      "duration_hm": "6:44",
      "num_of_question": "0"
    },
    {
      "id": "3996",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find the duplicate in o(n) time and 0(1) extra space File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3691",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Trie",
      "duration_hm": "5:54",
      "num_of_question": "0"
    },
    {
      "id": "3730",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether a given binary tree is sub tree of another binary tree (Approach-2)",
      "duration_hm": "11:49",
      "num_of_question": "0"
    },
    {
      "id": "3401",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Memory efficient Double Linked List insertion",
      "duration_hm": "2:15",
      "num_of_question": "0"
    },
    {
      "id": "3541",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Coin change",
      "duration_hm": "6:13",
      "num_of_question": "0"
    },
    {
      "id": "3402",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Memory efficient Double Linked List deletion",
      "duration_hm": "1:29",
      "num_of_question": "0"
    },
    {
      "id": "3283",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the two repeating elements in a given array Approach-1",
      "duration_hm": "2:15",
      "num_of_question": "0"
    },
    {
      "id": "3543",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Coin change recursive formula",
      "duration_hm": "13:32",
      "num_of_question": "0"
    },
    {
      "id": "3692",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Compressed Trie",
      "duration_hm": "2:49",
      "num_of_question": "0"
    },
    {
      "id": "3731",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of whether a given binary tree is subtree of another binary tree",
      "duration_hm": "2:20",
      "num_of_question": "0"
    },
    {
      "id": "4950",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Whether a given binary tree is subtree of another binary tree File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3544",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of coin change recursive formula",
      "duration_hm": "4:27",
      "num_of_question": "0"
    },
    {
      "id": "3693",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Ternary Search Tries",
      "duration_hm": "4:21",
      "num_of_question": "0"
    },
    {
      "id": "3403",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of memory efficient double linked list",
      "duration_hm": "6:26",
      "num_of_question": "0"
    },
    {
      "id": "3284",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the two repeating elements in a given array Approach-2",
      "duration_hm": "1:49",
      "num_of_question": "0"
    },
    {
      "id": "3285",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the two repeating elements in a given array Approach-3",
      "duration_hm": "3:47",
      "num_of_question": "0"
    },
    {
      "id": "5000",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Coin Change Problem File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "4014",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Memory efficient double linked list File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3694",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Searching in Ternary Search Tries",
      "duration_hm": "6:26",
      "num_of_question": "0"
    },
    {
      "id": "3733",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check wheather given two nodes are cousins in a binary tree",
      "duration_hm": "7:29",
      "num_of_question": "0"
    },
    {
      "id": "3734",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of check whether given two nodes are cousins in a binary tree",
      "duration_hm": "3:20",
      "num_of_question": "0"
    },
    {
      "id": "3404",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Sort a linked list of 0's 1's and 2's",
      "duration_hm": "6:34",
      "num_of_question": "0"
    },
    {
      "id": "3286",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the two repeating elements in a given array Approach-4",
      "duration_hm": "11:14",
      "num_of_question": "0"
    },
    {
      "id": "3546",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Number of ways to fill 2xn board in 2X1",
      "duration_hm": "4:36",
      "num_of_question": "0"
    },
    {
      "id": "3695",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insertion in Ternary Search Tries",
      "duration_hm": "3:8",
      "num_of_question": "0"
    },
    {
      "id": "3547",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Minimum cost path",
      "duration_hm": "14:59",
      "num_of_question": "0"
    },
    {
      "id": "3696",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Deletion in Ternary Search Tries",
      "duration_hm": "2:50",
      "num_of_question": "0"
    },
    {
      "id": "3405",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Add 1 to number represented in linked list",
      "duration_hm": "7:24",
      "num_of_question": "0"
    },
    {
      "id": "4951",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether given two nodes are cousins in a binary tree File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3287",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the two repeating elements in a given array Approach-5",
      "duration_hm": "5:31",
      "num_of_question": "0"
    },
    {
      "id": "3549",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of minimum cost path",
      "duration_hm": "8:51",
      "num_of_question": "0"
    },
    {
      "id": "3288",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation for finding the two repeating elements in the given array",
      "duration_hm": "9:38",
      "num_of_question": "0"
    },
    {
      "id": "3697",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Comparison of Standard Tries with Ternary Search Tries",
      "duration_hm": "0:59",
      "num_of_question": "0"
    },
    {
      "id": "3736",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Form a balanced binary search tree from given sorted array",
      "duration_hm": "5:25",
      "num_of_question": "0"
    },
    {
      "id": "3698",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Data Structure for Disjoint Sets",
      "duration_hm": "3:32",
      "num_of_question": "0"
    },
    {
      "id": "3997",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find two repeating elements File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3738",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Form a balanced binary search tree from given sorted array (Implementation - C)",
      "duration_hm": "5:37",
      "num_of_question": "0"
    },
    {
      "id": "5001",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Minimum cost path File ",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3700",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Operations on Disjoint Sets",
      "duration_hm": "4:42",
      "num_of_question": "0"
    },
    {
      "id": "3550",
      "cl_lecture_type": "1",
      "cl_lecture_name": "k-palindrome approach-1",
      "duration_hm": "3:39",
      "num_of_question": "0"
    },
    {
      "id": "3289",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rotate the array of size n by d elements Approach-1",
      "duration_hm": "2:45",
      "num_of_question": "0"
    },
    {
      "id": "4952",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Form a balanced binary search tree from given sorted array File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3290",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rotate the array of size n by d elements Approach-2",
      "duration_hm": "2:8",
      "num_of_question": "0"
    },
    {
      "id": "3701",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Linked List representation of Disjoint Sets",
      "duration_hm": "5:10",
      "num_of_question": "0"
    },
    {
      "id": "3740",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert a given binary search tree into balanced binary tree",
      "duration_hm": "4:13",
      "num_of_question": "0"
    },
    {
      "id": "3551",
      "cl_lecture_type": "1",
      "cl_lecture_name": "K-palindrome approach-2",
      "duration_hm": "4:6",
      "num_of_question": "0"
    },
    {
      "id": "3749",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of convert a given binary search tree into balanced binary tree",
      "duration_hm": "9:31",
      "num_of_question": "0"
    },
    {
      "id": "3552",
      "cl_lecture_type": "1",
      "cl_lecture_name": "implementation for equlibrium index in an array",
      "duration_hm": "7:55",
      "num_of_question": "0"
    },
    {
      "id": "3291",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rotate the array of size n by d elements Approach-3",
      "duration_hm": "3:12",
      "num_of_question": "0"
    },
    {
      "id": "3702",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Time complexity for linked list representation of Disjoint Sets",
      "duration_hm": "5:21",
      "num_of_question": "0"
    },
    {
      "id": "3292",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rotate the array of size n by d elements Approach-4",
      "duration_hm": "2:2",
      "num_of_question": "0"
    },
    {
      "id": "3703",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Amortized analysis of Disjoint Sets using linked list representation",
      "duration_hm": "6:37",
      "num_of_question": "0"
    },
    {
      "id": "4953",
      "cl_lecture_type": "2",
      "cl_lecture_name": "BST to Balanced BST",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3553",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest common subsequence order O(n) space",
      "duration_hm": "3:37",
      "num_of_question": "0"
    },
    {
      "id": "3558",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the sum of digits in all numbers from 1 to N for a given N Approach-1",
      "duration_hm": "3:30",
      "num_of_question": "0"
    },
    {
      "id": "3755",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print out all root to leaf of a binary tree",
      "duration_hm": "11:12",
      "num_of_question": "0"
    },
    {
      "id": "3704",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Disjoint set forest",
      "duration_hm": "4:47",
      "num_of_question": "0"
    },
    {
      "id": "3998",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Rotate an array of size n by d-elements File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3705",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Union by rank",
      "duration_hm": "2:37",
      "num_of_question": "0"
    },
    {
      "id": "3774",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Level order traversal in spiral form",
      "duration_hm": "5:22",
      "num_of_question": "0"
    },
    {
      "id": "3999",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Rotate an array of size n by d -elements by juggling algorithm File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3559",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the sum of digits in all numbers from 1 to N for a given N approach-2",
      "duration_hm": "13:31",
      "num_of_question": "0"
    },
    {
      "id": "6237",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Sort an array in wave form",
      "duration_hm": "5:17",
      "num_of_question": "0"
    },
    {
      "id": "3560",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the sum of digits in all numbers from 1 to N for a given N Approach-2 example",
      "duration_hm": "7:49",
      "num_of_question": "0"
    },
    {
      "id": "3706",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Analysis union by rank",
      "duration_hm": "11:15",
      "num_of_question": "0"
    },
    {
      "id": "3777",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of level order traversal in spiral form",
      "duration_hm": "7:9",
      "num_of_question": "0"
    },
    {
      "id": "3295",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of sort an array in wave form",
      "duration_hm": "1:28",
      "num_of_question": "0"
    },
    {
      "id": "3780",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Construct a binary tree from post order and inorder",
      "duration_hm": "3:28",
      "num_of_question": "0"
    },
    {
      "id": "3561",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the sum of digits in all numbers from 1 to N for a given N Approach-2 algorithm",
      "duration_hm": "5:25",
      "num_of_question": "0"
    },
    {
      "id": "3707",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Path compression",
      "duration_hm": "6:14",
      "num_of_question": "0"
    },
    {
      "id": "3564",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Even Length substring such that sum of first half is equal to second half",
      "duration_hm": "11:15",
      "num_of_question": "0"
    },
    {
      "id": "3708",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Time complexity using the Heuristics",
      "duration_hm": "5:31",
      "num_of_question": "0"
    },
    {
      "id": "3787",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Inorder and pre order",
      "duration_hm": "17:6",
      "num_of_question": "0"
    },
    {
      "id": "4000",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Sort an array in wave form File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3819",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print all nodes that are at distance k from a leaf node",
      "duration_hm": "9:56",
      "num_of_question": "0"
    },
    {
      "id": "3565",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Largest independent set in a binary tree",
      "duration_hm": "17:33",
      "num_of_question": "0"
    },
    {
      "id": "3709",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Kruskal's algorithm using Disjoint sets",
      "duration_hm": "7:13",
      "num_of_question": "0"
    },
    {
      "id": "3297",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Next greater number with same set of digits Approach-1",
      "duration_hm": "3:25",
      "num_of_question": "0"
    },
    {
      "id": "3710",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Example on kruskal's using Disjoint sets",
      "duration_hm": "8:53",
      "num_of_question": "0"
    },
    {
      "id": "5003",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Largest Independent Set File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3298",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Next greater number with same set of digits Approach-2",
      "duration_hm": "12:25",
      "num_of_question": "0"
    },
    {
      "id": "3820",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Evalution of expression of expression tree",
      "duration_hm": "5:52",
      "num_of_question": "0"
    },
    {
      "id": "3711",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Connected componands using Disjoints",
      "duration_hm": "4:47",
      "num_of_question": "0"
    },
    {
      "id": "3299",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of next greater number with same set of digits",
      "duration_hm": "4:51",
      "num_of_question": "0"
    },
    {
      "id": "4954",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Evaluation of expression tree File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3566",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Cutting a rod",
      "duration_hm": "16:39",
      "num_of_question": "0"
    },
    {
      "id": "4001",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Next greater number with same set of digits File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3821",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Print extreme node of each level in alternative order",
      "duration_hm": "7:44",
      "num_of_question": "0"
    },
    {
      "id": "5004",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Cutting a rod",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3712",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Example on connected components using Disjoint sets",
      "duration_hm": "4:55",
      "num_of_question": "0"
    },
    {
      "id": "3300",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Trapping Rain Water problem",
      "duration_hm": "7:42",
      "num_of_question": "0"
    },
    {
      "id": "4955",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Print extreme node of each level in alternative order File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3714",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Introduction to Fibonacci Heap",
      "duration_hm": "3:29",
      "num_of_question": "0"
    },
    {
      "id": "3567",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest palindromic substring approach-1",
      "duration_hm": "3:40",
      "num_of_question": "0"
    },
    {
      "id": "3331",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Trapping Rain Water problem Algorithm",
      "duration_hm": "5:37",
      "num_of_question": "0"
    },
    {
      "id": "3822",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Diagonal traversal of a binary tree",
      "duration_hm": "6:36",
      "num_of_question": "0"
    },
    {
      "id": "3715",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Structure of Fibonacci Heap",
      "duration_hm": "9:1",
      "num_of_question": "0"
    },
    {
      "id": "3568",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest palindromic substring approach-2",
      "duration_hm": "8:17",
      "num_of_question": "0"
    },
    {
      "id": "3716",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Insert, find, min, Union",
      "duration_hm": "4:54",
      "num_of_question": "0"
    },
    {
      "id": "3571",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Longest palindromic substring approach-3",
      "duration_hm": "13:38",
      "num_of_question": "0"
    },
    {
      "id": "3332",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation Trapping Rain water",
      "duration_hm": "4:54",
      "num_of_question": "0"
    },
    {
      "id": "3823",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert a binary tree to a tree holds children sum property",
      "duration_hm": "7:59",
      "num_of_question": "0"
    },
    {
      "id": "4956",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Convert a binary tree to a tree holds children sum property File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3717",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Extract Min",
      "duration_hm": "10:58",
      "num_of_question": "0"
    },
    {
      "id": "4002",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Trapping water problem File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3572",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count all palindromic substrings in a string using simple approach",
      "duration_hm": "2:24",
      "num_of_question": "0"
    },
    {
      "id": "3333",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Number of possible triangles Approcach-1",
      "duration_hm": "3:9",
      "num_of_question": "0"
    },
    {
      "id": "3824",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find multiplication of sums of data at same level in a tree",
      "duration_hm": "2:5",
      "num_of_question": "0"
    },
    {
      "id": "3718",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Decrease Key",
      "duration_hm": "5:15",
      "num_of_question": "0"
    },
    {
      "id": "3573",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count all palindromic substrings in a string using recursion function",
      "duration_hm": "3:55",
      "num_of_question": "0"
    },
    {
      "id": "3719",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Fibonacci Heap Delete",
      "duration_hm": "2:35",
      "num_of_question": "0"
    },
    {
      "id": "3574",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count all palindromic substrings in a string using dynamic programming",
      "duration_hm": "4:18",
      "num_of_question": "0"
    },
    {
      "id": "3334",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Algorithm for number of possible triangles Approach-2",
      "duration_hm": "16:33",
      "num_of_question": "0"
    },
    {
      "id": "4957",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find multiplication of sums of data at same level in a tree",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3335",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Given An Array of positive numbers, find smallest number that cannot be formed with sum of numbers from an array",
      "duration_hm": "14:54",
      "num_of_question": "0"
    },
    {
      "id": "3575",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count all palindromic substrings in a string with example",
      "duration_hm": "8:12",
      "num_of_question": "0"
    },
    {
      "id": "3825",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find maximum difference between node and it's ancestor in a binary tree",
      "duration_hm": "18:16",
      "num_of_question": "0"
    },
    {
      "id": "3576",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count all distinct palindromic substrings of a given string",
      "duration_hm": "1:33",
      "num_of_question": "0"
    },
    {
      "id": "4958",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Find maximum difference between node and its ancestor",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3336",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rearrange the array so that a[i] becomes a[a[i]]",
      "duration_hm": "13:53",
      "num_of_question": "0"
    },
    {
      "id": "3826",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Serialize and Deserialize a binary tree part-1",
      "duration_hm": "10:27",
      "num_of_question": "0"
    },
    {
      "id": "3577",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Maximum sum in rectangle",
      "duration_hm": "12:35",
      "num_of_question": "0"
    },
    {
      "id": "4003",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Rearrange the array so that a[i] becomes a[a[i]] File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3579",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Maximum dot product",
      "duration_hm": "15:4",
      "num_of_question": "0"
    },
    {
      "id": "3827",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Analysis of Serialize and deserialize a binary tree part-2",
      "duration_hm": "10:54",
      "num_of_question": "0"
    },
    {
      "id": "3337",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Rotate square matrix by 90 degress",
      "duration_hm": "3:27",
      "num_of_question": "0"
    },
    {
      "id": "3828",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of serialization",
      "duration_hm": "1:53",
      "num_of_question": "0"
    },
    {
      "id": "3338",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Rotate square matrix by 90 degrees",
      "duration_hm": "11:50",
      "num_of_question": "0"
    },
    {
      "id": "3580",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Largest independent set problem Approach-1",
      "duration_hm": "4:19",
      "num_of_question": "0"
    },
    {
      "id": "3829",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Deserialization",
      "duration_hm": "9:31",
      "num_of_question": "0"
    },
    {
      "id": "3599",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Largest independent set problem Approach-2",
      "duration_hm": "10:21",
      "num_of_question": "0"
    },
    {
      "id": "3581",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Largest independent set problem Approach-3",
      "duration_hm": "13:41",
      "num_of_question": "0"
    },
    {
      "id": "3830",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Serialize and Deserialize an N-ary tree",
      "duration_hm": "9:40",
      "num_of_question": "0"
    },
    {
      "id": "3831",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of serialize and deserialize N-ary tree",
      "duration_hm": "6:7",
      "num_of_question": "0"
    },
    {
      "id": "3582",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Egg dropping problem Introduction",
      "duration_hm": "11:28",
      "num_of_question": "0"
    },
    {
      "id": "3585",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Egg dropping puzzel continued",
      "duration_hm": "12:35",
      "num_of_question": "0"
    },
    {
      "id": "3832",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Serialization and Deserialization N-ary tree",
      "duration_hm": "12:47",
      "num_of_question": "0"
    },
    {
      "id": "3833",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Construct a tree from ancestor matrix",
      "duration_hm": "7:18",
      "num_of_question": "0"
    },
    {
      "id": "3584",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Dynamic program for egg dropping",
      "duration_hm": "10:26",
      "num_of_question": "0"
    },
    {
      "id": "3834",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Construct a complete binary tree from it's linked list representation",
      "duration_hm": "4:6",
      "num_of_question": "0"
    },
    {
      "id": "3586",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Non-Decreasing number with n-digits",
      "duration_hm": "9:41",
      "num_of_question": "0"
    },
    {
      "id": "3589",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Weighted job scheduling",
      "duration_hm": "19:23",
      "num_of_question": "0"
    },
    {
      "id": "3835",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of construct a complete binary tree from its Linked list representation",
      "duration_hm": "5:42",
      "num_of_question": "0"
    },
    {
      "id": "3836",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the next right node of a given key",
      "duration_hm": "3:1",
      "num_of_question": "0"
    },
    {
      "id": "3587",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of weighted job scheduling",
      "duration_hm": "7:11",
      "num_of_question": "0"
    },
    {
      "id": "3837",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of find next right node of a given key",
      "duration_hm": "11:51",
      "num_of_question": "0"
    },
    {
      "id": "5005",
      "cl_lecture_type": "2",
      "cl_lecture_name": "weighted job scheduling",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3838",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Boundary traversal of a given tree",
      "duration_hm": "2:10",
      "num_of_question": "0"
    },
    {
      "id": "3591",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Count the number of ways to reach a given score in a game",
      "duration_hm": "17:8",
      "num_of_question": "0"
    },
    {
      "id": "5006",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Count the number of ways to reach a given score in a game where a move can earn 2 or 4 or 6",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3840",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Implementation of Boundary Traversal",
      "duration_hm": "23:8",
      "num_of_question": "0"
    },
    {
      "id": "3841",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Convert a given tree to it's sum tree",
      "duration_hm": "9:56",
      "num_of_question": "0"
    },
    {
      "id": "3592",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Find the maximum coins you can collect by bursting balloons wisely",
      "duration_hm": "34:31",
      "num_of_question": "0"
    },
    {
      "id": "3842",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Check whether given tree is foldable (or) not",
      "duration_hm": "4:11",
      "num_of_question": "0"
    },
    {
      "id": "3593",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Collect maximum coins in grid using two traversals",
      "duration_hm": "8:16",
      "num_of_question": "0"
    },
    {
      "id": "4959",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Check whether given tree is foldable (or) not File",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "5007",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Collect maximum coins in grid using two traversals",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3843",
      "cl_lecture_type": "1",
      "cl_lecture_name": "If removing edge can divide a binary tree into two halfs",
      "duration_hm": "6:2",
      "num_of_question": "0"
    },
    {
      "id": "4960",
      "cl_lecture_type": "2",
      "cl_lecture_name": "If removing edge can divide a binary tree into two halves",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3844",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Lock and unlock the resources that are arranged in k-ary tree",
      "duration_hm": "11:41",
      "num_of_question": "0"
    },
    {
      "id": "3845",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Reverse alternate levels of perfect binary tree",
      "duration_hm": "13:38",
      "num_of_question": "0"
    },
    {
      "id": "4961",
      "cl_lecture_type": "2",
      "cl_lecture_name": "Reverse alternate levels of perfect binary tree",
      "duration_hm": "0:0",
      "num_of_question": "0"
    },
    {
      "id": "3846",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Custom tree problem",
      "duration_hm": "11:46",
      "num_of_question": "0"
    },
    {
      "id": "3847",
      "cl_lecture_type": "1",
      "cl_lecture_name": "Threaded binary tree",
      "duration_hm": "14:26",
      "num_of_question": "0"
    }
  ]
}